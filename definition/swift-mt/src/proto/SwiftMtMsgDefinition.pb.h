// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SwiftMtMsgDefinition.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_SwiftMtMsgDefinition_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_SwiftMtMsgDefinition_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_SwiftMtMsgDefinition_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_SwiftMtMsgDefinition_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_SwiftMtMsgDefinition_2eproto;
namespace message {
namespace definition {
namespace swift {
namespace mt {
class ComponentFormatEntry;
class ComponentFormatEntryDefaultTypeInternal;
extern ComponentFormatEntryDefaultTypeInternal _ComponentFormatEntry_default_instance_;
class ComponentName;
class ComponentNameDefaultTypeInternal;
extern ComponentNameDefaultTypeInternal _ComponentName_default_instance_;
class FieldDef;
class FieldDefDefaultTypeInternal;
extern FieldDefDefaultTypeInternal _FieldDef_default_instance_;
class ObjectDef;
class ObjectDefDefaultTypeInternal;
extern ObjectDefDefaultTypeInternal _ObjectDef_default_instance_;
class OptionDef;
class OptionDefDefaultTypeInternal;
extern OptionDefDefaultTypeInternal _OptionDef_default_instance_;
class QualifierDef;
class QualifierDefDefaultTypeInternal;
extern QualifierDefDefaultTypeInternal _QualifierDef_default_instance_;
class RepetitionDef;
class RepetitionDefDefaultTypeInternal;
extern RepetitionDefDefaultTypeInternal _RepetitionDef_default_instance_;
class SequenceDef;
class SequenceDefDefaultTypeInternal;
extern SequenceDefDefaultTypeInternal _SequenceDef_default_instance_;
class SwiftMtMessageDefinition;
class SwiftMtMessageDefinitionDefaultTypeInternal;
extern SwiftMtMessageDefinitionDefaultTypeInternal _SwiftMtMessageDefinition_default_instance_;
}  // namespace mt
}  // namespace swift
}  // namespace definition
}  // namespace message
PROTOBUF_NAMESPACE_OPEN
template<> ::message::definition::swift::mt::ComponentFormatEntry* Arena::CreateMaybeMessage<::message::definition::swift::mt::ComponentFormatEntry>(Arena*);
template<> ::message::definition::swift::mt::ComponentName* Arena::CreateMaybeMessage<::message::definition::swift::mt::ComponentName>(Arena*);
template<> ::message::definition::swift::mt::FieldDef* Arena::CreateMaybeMessage<::message::definition::swift::mt::FieldDef>(Arena*);
template<> ::message::definition::swift::mt::ObjectDef* Arena::CreateMaybeMessage<::message::definition::swift::mt::ObjectDef>(Arena*);
template<> ::message::definition::swift::mt::OptionDef* Arena::CreateMaybeMessage<::message::definition::swift::mt::OptionDef>(Arena*);
template<> ::message::definition::swift::mt::QualifierDef* Arena::CreateMaybeMessage<::message::definition::swift::mt::QualifierDef>(Arena*);
template<> ::message::definition::swift::mt::RepetitionDef* Arena::CreateMaybeMessage<::message::definition::swift::mt::RepetitionDef>(Arena*);
template<> ::message::definition::swift::mt::SequenceDef* Arena::CreateMaybeMessage<::message::definition::swift::mt::SequenceDef>(Arena*);
template<> ::message::definition::swift::mt::SwiftMtMessageDefinition* Arena::CreateMaybeMessage<::message::definition::swift::mt::SwiftMtMessageDefinition>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace message {
namespace definition {
namespace swift {
namespace mt {

// ===================================================================

class SwiftMtMessageDefinition :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.SwiftMtMessageDefinition) */ {
 public:
  SwiftMtMessageDefinition();
  virtual ~SwiftMtMessageDefinition();

  SwiftMtMessageDefinition(const SwiftMtMessageDefinition& from);
  SwiftMtMessageDefinition(SwiftMtMessageDefinition&& from) noexcept
    : SwiftMtMessageDefinition() {
    *this = ::std::move(from);
  }

  inline SwiftMtMessageDefinition& operator=(const SwiftMtMessageDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  inline SwiftMtMessageDefinition& operator=(SwiftMtMessageDefinition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SwiftMtMessageDefinition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SwiftMtMessageDefinition* internal_default_instance() {
    return reinterpret_cast<const SwiftMtMessageDefinition*>(
               &_SwiftMtMessageDefinition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SwiftMtMessageDefinition& a, SwiftMtMessageDefinition& b) {
    a.Swap(&b);
  }
  inline void Swap(SwiftMtMessageDefinition* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SwiftMtMessageDefinition* New() const final {
    return CreateMaybeMessage<SwiftMtMessageDefinition>(nullptr);
  }

  SwiftMtMessageDefinition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SwiftMtMessageDefinition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SwiftMtMessageDefinition& from);
  void MergeFrom(const SwiftMtMessageDefinition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SwiftMtMessageDefinition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.SwiftMtMessageDefinition";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 3,
    kServiceReleaseFieldNumber = 1,
    kMessageTypeFieldNumber = 2,
  };
  // repeated .message.definition.swift.mt.ObjectDef objects = 3;
  int objects_size() const;
  private:
  int _internal_objects_size() const;
  public:
  void clear_objects();
  ::message::definition::swift::mt::ObjectDef* mutable_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >*
      mutable_objects();
  private:
  const ::message::definition::swift::mt::ObjectDef& _internal_objects(int index) const;
  ::message::definition::swift::mt::ObjectDef* _internal_add_objects();
  public:
  const ::message::definition::swift::mt::ObjectDef& objects(int index) const;
  ::message::definition::swift::mt::ObjectDef* add_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >&
      objects() const;

  // string service_release = 1;
  void clear_service_release();
  const std::string& service_release() const;
  void set_service_release(const std::string& value);
  void set_service_release(std::string&& value);
  void set_service_release(const char* value);
  void set_service_release(const char* value, size_t size);
  std::string* mutable_service_release();
  std::string* release_service_release();
  void set_allocated_service_release(std::string* service_release);
  private:
  const std::string& _internal_service_release() const;
  void _internal_set_service_release(const std::string& value);
  std::string* _internal_mutable_service_release();
  public:

  // string message_type = 2;
  void clear_message_type();
  const std::string& message_type() const;
  void set_message_type(const std::string& value);
  void set_message_type(std::string&& value);
  void set_message_type(const char* value);
  void set_message_type(const char* value, size_t size);
  std::string* mutable_message_type();
  std::string* release_message_type();
  void set_allocated_message_type(std::string* message_type);
  private:
  const std::string& _internal_message_type() const;
  void _internal_set_message_type(const std::string& value);
  std::string* _internal_mutable_message_type();
  public:

  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.SwiftMtMessageDefinition)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef > objects_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr service_release_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// -------------------------------------------------------------------

class ObjectDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.ObjectDef) */ {
 public:
  ObjectDef();
  virtual ~ObjectDef();

  ObjectDef(const ObjectDef& from);
  ObjectDef(ObjectDef&& from) noexcept
    : ObjectDef() {
    *this = ::std::move(from);
  }

  inline ObjectDef& operator=(const ObjectDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDef& operator=(ObjectDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectDef& default_instance();

  enum ObjectOneofCase {
    kSequence = 5,
    kField = 6,
    kRepetition = 7,
    OBJECT_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectDef* internal_default_instance() {
    return reinterpret_cast<const ObjectDef*>(
               &_ObjectDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ObjectDef& a, ObjectDef& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectDef* New() const final {
    return CreateMaybeMessage<ObjectDef>(nullptr);
  }

  ObjectDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectDef& from);
  void MergeFrom(const ObjectDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.ObjectDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 1,
    kSequenceFieldNumber = 5,
    kFieldFieldNumber = 6,
    kRepetitionFieldNumber = 7,
  };
  // string tag = 1;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);
  private:
  const std::string& _internal_tag() const;
  void _internal_set_tag(const std::string& value);
  std::string* _internal_mutable_tag();
  public:

  // .message.definition.swift.mt.SequenceDef sequence = 5;
  bool has_sequence() const;
  private:
  bool _internal_has_sequence() const;
  public:
  void clear_sequence();
  const ::message::definition::swift::mt::SequenceDef& sequence() const;
  ::message::definition::swift::mt::SequenceDef* release_sequence();
  ::message::definition::swift::mt::SequenceDef* mutable_sequence();
  void set_allocated_sequence(::message::definition::swift::mt::SequenceDef* sequence);
  private:
  const ::message::definition::swift::mt::SequenceDef& _internal_sequence() const;
  ::message::definition::swift::mt::SequenceDef* _internal_mutable_sequence();
  public:

  // .message.definition.swift.mt.FieldDef field = 6;
  bool has_field() const;
  private:
  bool _internal_has_field() const;
  public:
  void clear_field();
  const ::message::definition::swift::mt::FieldDef& field() const;
  ::message::definition::swift::mt::FieldDef* release_field();
  ::message::definition::swift::mt::FieldDef* mutable_field();
  void set_allocated_field(::message::definition::swift::mt::FieldDef* field);
  private:
  const ::message::definition::swift::mt::FieldDef& _internal_field() const;
  ::message::definition::swift::mt::FieldDef* _internal_mutable_field();
  public:

  // .message.definition.swift.mt.RepetitionDef repetition = 7;
  bool has_repetition() const;
  private:
  bool _internal_has_repetition() const;
  public:
  void clear_repetition();
  const ::message::definition::swift::mt::RepetitionDef& repetition() const;
  ::message::definition::swift::mt::RepetitionDef* release_repetition();
  ::message::definition::swift::mt::RepetitionDef* mutable_repetition();
  void set_allocated_repetition(::message::definition::swift::mt::RepetitionDef* repetition);
  private:
  const ::message::definition::swift::mt::RepetitionDef& _internal_repetition() const;
  ::message::definition::swift::mt::RepetitionDef* _internal_mutable_repetition();
  public:

  void clear_object_oneof();
  ObjectOneofCase object_oneof_case() const;
  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.ObjectDef)
 private:
  class _Internal;
  void set_has_sequence();
  void set_has_field();
  void set_has_repetition();

  inline bool has_object_oneof() const;
  inline void clear_has_object_oneof();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  union ObjectOneofUnion {
    ObjectOneofUnion() {}
    ::message::definition::swift::mt::SequenceDef* sequence_;
    ::message::definition::swift::mt::FieldDef* field_;
    ::message::definition::swift::mt::RepetitionDef* repetition_;
  } object_oneof_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// -------------------------------------------------------------------

class RepetitionDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.RepetitionDef) */ {
 public:
  RepetitionDef();
  virtual ~RepetitionDef();

  RepetitionDef(const RepetitionDef& from);
  RepetitionDef(RepetitionDef&& from) noexcept
    : RepetitionDef() {
    *this = ::std::move(from);
  }

  inline RepetitionDef& operator=(const RepetitionDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline RepetitionDef& operator=(RepetitionDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RepetitionDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RepetitionDef* internal_default_instance() {
    return reinterpret_cast<const RepetitionDef*>(
               &_RepetitionDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RepetitionDef& a, RepetitionDef& b) {
    a.Swap(&b);
  }
  inline void Swap(RepetitionDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RepetitionDef* New() const final {
    return CreateMaybeMessage<RepetitionDef>(nullptr);
  }

  RepetitionDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RepetitionDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RepetitionDef& from);
  void MergeFrom(const RepetitionDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RepetitionDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.RepetitionDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 1,
  };
  // repeated .message.definition.swift.mt.ObjectDef objects = 1;
  int objects_size() const;
  private:
  int _internal_objects_size() const;
  public:
  void clear_objects();
  ::message::definition::swift::mt::ObjectDef* mutable_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >*
      mutable_objects();
  private:
  const ::message::definition::swift::mt::ObjectDef& _internal_objects(int index) const;
  ::message::definition::swift::mt::ObjectDef* _internal_add_objects();
  public:
  const ::message::definition::swift::mt::ObjectDef& objects(int index) const;
  ::message::definition::swift::mt::ObjectDef* add_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >&
      objects() const;

  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.RepetitionDef)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef > objects_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// -------------------------------------------------------------------

class SequenceDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.SequenceDef) */ {
 public:
  SequenceDef();
  virtual ~SequenceDef();

  SequenceDef(const SequenceDef& from);
  SequenceDef(SequenceDef&& from) noexcept
    : SequenceDef() {
    *this = ::std::move(from);
  }

  inline SequenceDef& operator=(const SequenceDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline SequenceDef& operator=(SequenceDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SequenceDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SequenceDef* internal_default_instance() {
    return reinterpret_cast<const SequenceDef*>(
               &_SequenceDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SequenceDef& a, SequenceDef& b) {
    a.Swap(&b);
  }
  inline void Swap(SequenceDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SequenceDef* New() const final {
    return CreateMaybeMessage<SequenceDef>(nullptr);
  }

  SequenceDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SequenceDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SequenceDef& from);
  void MergeFrom(const SequenceDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SequenceDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.SequenceDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 5,
    kTagFieldNumber = 1,
    kNameFieldNumber = 2,
    kRepeatableFieldNumber = 3,
    kMandatoryFieldNumber = 4,
  };
  // repeated .message.definition.swift.mt.ObjectDef objects = 5;
  int objects_size() const;
  private:
  int _internal_objects_size() const;
  public:
  void clear_objects();
  ::message::definition::swift::mt::ObjectDef* mutable_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >*
      mutable_objects();
  private:
  const ::message::definition::swift::mt::ObjectDef& _internal_objects(int index) const;
  ::message::definition::swift::mt::ObjectDef* _internal_add_objects();
  public:
  const ::message::definition::swift::mt::ObjectDef& objects(int index) const;
  ::message::definition::swift::mt::ObjectDef* add_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >&
      objects() const;

  // string tag = 1;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);
  private:
  const std::string& _internal_tag() const;
  void _internal_set_tag(const std::string& value);
  std::string* _internal_mutable_tag();
  public:

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // bool repeatable = 3;
  void clear_repeatable();
  bool repeatable() const;
  void set_repeatable(bool value);
  private:
  bool _internal_repeatable() const;
  void _internal_set_repeatable(bool value);
  public:

  // bool mandatory = 4;
  void clear_mandatory();
  bool mandatory() const;
  void set_mandatory(bool value);
  private:
  bool _internal_mandatory() const;
  void _internal_set_mandatory(bool value);
  public:

  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.SequenceDef)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef > objects_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool repeatable_;
  bool mandatory_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// -------------------------------------------------------------------

class FieldDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.FieldDef) */ {
 public:
  FieldDef();
  virtual ~FieldDef();

  FieldDef(const FieldDef& from);
  FieldDef(FieldDef&& from) noexcept
    : FieldDef() {
    *this = ::std::move(from);
  }

  inline FieldDef& operator=(const FieldDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline FieldDef& operator=(FieldDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FieldDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldDef* internal_default_instance() {
    return reinterpret_cast<const FieldDef*>(
               &_FieldDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(FieldDef& a, FieldDef& b) {
    a.Swap(&b);
  }
  inline void Swap(FieldDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FieldDef* New() const final {
    return CreateMaybeMessage<FieldDef>(nullptr);
  }

  FieldDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FieldDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FieldDef& from);
  void MergeFrom(const FieldDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FieldDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.FieldDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 5,
    kQualifiersFieldNumber = 10,
    kTagFieldNumber = 1,
  };
  // repeated .message.definition.swift.mt.OptionDef options = 5;
  int options_size() const;
  private:
  int _internal_options_size() const;
  public:
  void clear_options();
  ::message::definition::swift::mt::OptionDef* mutable_options(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::OptionDef >*
      mutable_options();
  private:
  const ::message::definition::swift::mt::OptionDef& _internal_options(int index) const;
  ::message::definition::swift::mt::OptionDef* _internal_add_options();
  public:
  const ::message::definition::swift::mt::OptionDef& options(int index) const;
  ::message::definition::swift::mt::OptionDef* add_options();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::OptionDef >&
      options() const;

  // repeated .message.definition.swift.mt.QualifierDef qualifiers = 10;
  int qualifiers_size() const;
  private:
  int _internal_qualifiers_size() const;
  public:
  void clear_qualifiers();
  ::message::definition::swift::mt::QualifierDef* mutable_qualifiers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::QualifierDef >*
      mutable_qualifiers();
  private:
  const ::message::definition::swift::mt::QualifierDef& _internal_qualifiers(int index) const;
  ::message::definition::swift::mt::QualifierDef* _internal_add_qualifiers();
  public:
  const ::message::definition::swift::mt::QualifierDef& qualifiers(int index) const;
  ::message::definition::swift::mt::QualifierDef* add_qualifiers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::QualifierDef >&
      qualifiers() const;

  // string tag = 1;
  void clear_tag();
  const std::string& tag() const;
  void set_tag(const std::string& value);
  void set_tag(std::string&& value);
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  std::string* mutable_tag();
  std::string* release_tag();
  void set_allocated_tag(std::string* tag);
  private:
  const std::string& _internal_tag() const;
  void _internal_set_tag(const std::string& value);
  std::string* _internal_mutable_tag();
  public:

  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.FieldDef)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::OptionDef > options_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::QualifierDef > qualifiers_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// -------------------------------------------------------------------

class OptionDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.OptionDef) */ {
 public:
  OptionDef();
  virtual ~OptionDef();

  OptionDef(const OptionDef& from);
  OptionDef(OptionDef&& from) noexcept
    : OptionDef() {
    *this = ::std::move(from);
  }

  inline OptionDef& operator=(const OptionDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptionDef& operator=(OptionDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OptionDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OptionDef* internal_default_instance() {
    return reinterpret_cast<const OptionDef*>(
               &_OptionDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(OptionDef& a, OptionDef& b) {
    a.Swap(&b);
  }
  inline void Swap(OptionDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OptionDef* New() const final {
    return CreateMaybeMessage<OptionDef>(nullptr);
  }

  OptionDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OptionDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OptionDef& from);
  void MergeFrom(const OptionDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OptionDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.OptionDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentNamesFieldNumber = 3,
    kComponentFormatsFieldNumber = 4,
    kOptionFieldNumber = 1,
    kFullFormatFieldNumber = 2,
  };
  // repeated .message.definition.swift.mt.ComponentName component_names = 3;
  int component_names_size() const;
  private:
  int _internal_component_names_size() const;
  public:
  void clear_component_names();
  ::message::definition::swift::mt::ComponentName* mutable_component_names(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentName >*
      mutable_component_names();
  private:
  const ::message::definition::swift::mt::ComponentName& _internal_component_names(int index) const;
  ::message::definition::swift::mt::ComponentName* _internal_add_component_names();
  public:
  const ::message::definition::swift::mt::ComponentName& component_names(int index) const;
  ::message::definition::swift::mt::ComponentName* add_component_names();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentName >&
      component_names() const;

  // repeated .message.definition.swift.mt.ComponentFormatEntry component_formats = 4;
  int component_formats_size() const;
  private:
  int _internal_component_formats_size() const;
  public:
  void clear_component_formats();
  ::message::definition::swift::mt::ComponentFormatEntry* mutable_component_formats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentFormatEntry >*
      mutable_component_formats();
  private:
  const ::message::definition::swift::mt::ComponentFormatEntry& _internal_component_formats(int index) const;
  ::message::definition::swift::mt::ComponentFormatEntry* _internal_add_component_formats();
  public:
  const ::message::definition::swift::mt::ComponentFormatEntry& component_formats(int index) const;
  ::message::definition::swift::mt::ComponentFormatEntry* add_component_formats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentFormatEntry >&
      component_formats() const;

  // string option = 1;
  void clear_option();
  const std::string& option() const;
  void set_option(const std::string& value);
  void set_option(std::string&& value);
  void set_option(const char* value);
  void set_option(const char* value, size_t size);
  std::string* mutable_option();
  std::string* release_option();
  void set_allocated_option(std::string* option);
  private:
  const std::string& _internal_option() const;
  void _internal_set_option(const std::string& value);
  std::string* _internal_mutable_option();
  public:

  // string full_format = 2;
  void clear_full_format();
  const std::string& full_format() const;
  void set_full_format(const std::string& value);
  void set_full_format(std::string&& value);
  void set_full_format(const char* value);
  void set_full_format(const char* value, size_t size);
  std::string* mutable_full_format();
  std::string* release_full_format();
  void set_allocated_full_format(std::string* full_format);
  private:
  const std::string& _internal_full_format() const;
  void _internal_set_full_format(const std::string& value);
  std::string* _internal_mutable_full_format();
  public:

  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.OptionDef)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentName > component_names_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentFormatEntry > component_formats_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr option_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr full_format_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// -------------------------------------------------------------------

class ComponentName :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.ComponentName) */ {
 public:
  ComponentName();
  virtual ~ComponentName();

  ComponentName(const ComponentName& from);
  ComponentName(ComponentName&& from) noexcept
    : ComponentName() {
    *this = ::std::move(from);
  }

  inline ComponentName& operator=(const ComponentName& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentName& operator=(ComponentName&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComponentName& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentName* internal_default_instance() {
    return reinterpret_cast<const ComponentName*>(
               &_ComponentName_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ComponentName& a, ComponentName& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentName* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComponentName* New() const final {
    return CreateMaybeMessage<ComponentName>(nullptr);
  }

  ComponentName* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComponentName>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComponentName& from);
  void MergeFrom(const ComponentName& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentName* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.ComponentName";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kSeparatorBeforeFieldNumber = 2,
    kSeparatorAfterFieldNumber = 3,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string separator_before = 2;
  void clear_separator_before();
  const std::string& separator_before() const;
  void set_separator_before(const std::string& value);
  void set_separator_before(std::string&& value);
  void set_separator_before(const char* value);
  void set_separator_before(const char* value, size_t size);
  std::string* mutable_separator_before();
  std::string* release_separator_before();
  void set_allocated_separator_before(std::string* separator_before);
  private:
  const std::string& _internal_separator_before() const;
  void _internal_set_separator_before(const std::string& value);
  std::string* _internal_mutable_separator_before();
  public:

  // string separator_after = 3;
  void clear_separator_after();
  const std::string& separator_after() const;
  void set_separator_after(const std::string& value);
  void set_separator_after(std::string&& value);
  void set_separator_after(const char* value);
  void set_separator_after(const char* value, size_t size);
  std::string* mutable_separator_after();
  std::string* release_separator_after();
  void set_allocated_separator_after(std::string* separator_after);
  private:
  const std::string& _internal_separator_after() const;
  void _internal_set_separator_after(const std::string& value);
  std::string* _internal_mutable_separator_after();
  public:

  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.ComponentName)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr separator_before_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr separator_after_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// -------------------------------------------------------------------

class ComponentFormatEntry :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.ComponentFormatEntry) */ {
 public:
  ComponentFormatEntry();
  virtual ~ComponentFormatEntry();

  ComponentFormatEntry(const ComponentFormatEntry& from);
  ComponentFormatEntry(ComponentFormatEntry&& from) noexcept
    : ComponentFormatEntry() {
    *this = ::std::move(from);
  }

  inline ComponentFormatEntry& operator=(const ComponentFormatEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentFormatEntry& operator=(ComponentFormatEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComponentFormatEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComponentFormatEntry* internal_default_instance() {
    return reinterpret_cast<const ComponentFormatEntry*>(
               &_ComponentFormatEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ComponentFormatEntry& a, ComponentFormatEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(ComponentFormatEntry* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComponentFormatEntry* New() const final {
    return CreateMaybeMessage<ComponentFormatEntry>(nullptr);
  }

  ComponentFormatEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComponentFormatEntry>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComponentFormatEntry& from);
  void MergeFrom(const ComponentFormatEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComponentFormatEntry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.ComponentFormatEntry";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFormatFieldNumber = 1,
    kSeparatorBeforeFieldNumber = 2,
    kSeparatorAfterFieldNumber = 3,
  };
  // string format = 1;
  void clear_format();
  const std::string& format() const;
  void set_format(const std::string& value);
  void set_format(std::string&& value);
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  std::string* mutable_format();
  std::string* release_format();
  void set_allocated_format(std::string* format);
  private:
  const std::string& _internal_format() const;
  void _internal_set_format(const std::string& value);
  std::string* _internal_mutable_format();
  public:

  // string separator_before = 2;
  void clear_separator_before();
  const std::string& separator_before() const;
  void set_separator_before(const std::string& value);
  void set_separator_before(std::string&& value);
  void set_separator_before(const char* value);
  void set_separator_before(const char* value, size_t size);
  std::string* mutable_separator_before();
  std::string* release_separator_before();
  void set_allocated_separator_before(std::string* separator_before);
  private:
  const std::string& _internal_separator_before() const;
  void _internal_set_separator_before(const std::string& value);
  std::string* _internal_mutable_separator_before();
  public:

  // string separator_after = 3;
  void clear_separator_after();
  const std::string& separator_after() const;
  void set_separator_after(const std::string& value);
  void set_separator_after(std::string&& value);
  void set_separator_after(const char* value);
  void set_separator_after(const char* value, size_t size);
  std::string* mutable_separator_after();
  std::string* release_separator_after();
  void set_allocated_separator_after(std::string* separator_after);
  private:
  const std::string& _internal_separator_after() const;
  void _internal_set_separator_after(const std::string& value);
  std::string* _internal_mutable_separator_after();
  public:

  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.ComponentFormatEntry)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr format_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr separator_before_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr separator_after_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// -------------------------------------------------------------------

class QualifierDef :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.definition.swift.mt.QualifierDef) */ {
 public:
  QualifierDef();
  virtual ~QualifierDef();

  QualifierDef(const QualifierDef& from);
  QualifierDef(QualifierDef&& from) noexcept
    : QualifierDef() {
    *this = ::std::move(from);
  }

  inline QualifierDef& operator=(const QualifierDef& from) {
    CopyFrom(from);
    return *this;
  }
  inline QualifierDef& operator=(QualifierDef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QualifierDef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QualifierDef* internal_default_instance() {
    return reinterpret_cast<const QualifierDef*>(
               &_QualifierDef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(QualifierDef& a, QualifierDef& b) {
    a.Swap(&b);
  }
  inline void Swap(QualifierDef* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QualifierDef* New() const final {
    return CreateMaybeMessage<QualifierDef>(nullptr);
  }

  QualifierDef* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QualifierDef>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QualifierDef& from);
  void MergeFrom(const QualifierDef& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QualifierDef* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.definition.swift.mt.QualifierDef";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_SwiftMtMsgDefinition_2eproto);
    return ::descriptor_table_SwiftMtMsgDefinition_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionsFieldNumber = 2,
    kQualifierFieldNumber = 1,
    kDescriptionFieldNumber = 3,
  };
  // repeated string options = 2;
  int options_size() const;
  private:
  int _internal_options_size() const;
  public:
  void clear_options();
  const std::string& options(int index) const;
  std::string* mutable_options(int index);
  void set_options(int index, const std::string& value);
  void set_options(int index, std::string&& value);
  void set_options(int index, const char* value);
  void set_options(int index, const char* value, size_t size);
  std::string* add_options();
  void add_options(const std::string& value);
  void add_options(std::string&& value);
  void add_options(const char* value);
  void add_options(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& options() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_options();
  private:
  const std::string& _internal_options(int index) const;
  std::string* _internal_add_options();
  public:

  // string qualifier = 1;
  void clear_qualifier();
  const std::string& qualifier() const;
  void set_qualifier(const std::string& value);
  void set_qualifier(std::string&& value);
  void set_qualifier(const char* value);
  void set_qualifier(const char* value, size_t size);
  std::string* mutable_qualifier();
  std::string* release_qualifier();
  void set_allocated_qualifier(std::string* qualifier);
  private:
  const std::string& _internal_qualifier() const;
  void _internal_set_qualifier(const std::string& value);
  std::string* _internal_mutable_qualifier();
  public:

  // string description = 3;
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // @@protoc_insertion_point(class_scope:message.definition.swift.mt.QualifierDef)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> options_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qualifier_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_SwiftMtMsgDefinition_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SwiftMtMessageDefinition

// string service_release = 1;
inline void SwiftMtMessageDefinition::clear_service_release() {
  service_release_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SwiftMtMessageDefinition::service_release() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.SwiftMtMessageDefinition.service_release)
  return _internal_service_release();
}
inline void SwiftMtMessageDefinition::set_service_release(const std::string& value) {
  _internal_set_service_release(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.SwiftMtMessageDefinition.service_release)
}
inline std::string* SwiftMtMessageDefinition::mutable_service_release() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.SwiftMtMessageDefinition.service_release)
  return _internal_mutable_service_release();
}
inline const std::string& SwiftMtMessageDefinition::_internal_service_release() const {
  return service_release_.GetNoArena();
}
inline void SwiftMtMessageDefinition::_internal_set_service_release(const std::string& value) {
  
  service_release_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SwiftMtMessageDefinition::set_service_release(std::string&& value) {
  
  service_release_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.SwiftMtMessageDefinition.service_release)
}
inline void SwiftMtMessageDefinition::set_service_release(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  service_release_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.SwiftMtMessageDefinition.service_release)
}
inline void SwiftMtMessageDefinition::set_service_release(const char* value, size_t size) {
  
  service_release_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.SwiftMtMessageDefinition.service_release)
}
inline std::string* SwiftMtMessageDefinition::_internal_mutable_service_release() {
  
  return service_release_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SwiftMtMessageDefinition::release_service_release() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.SwiftMtMessageDefinition.service_release)
  
  return service_release_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SwiftMtMessageDefinition::set_allocated_service_release(std::string* service_release) {
  if (service_release != nullptr) {
    
  } else {
    
  }
  service_release_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), service_release);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.SwiftMtMessageDefinition.service_release)
}

// string message_type = 2;
inline void SwiftMtMessageDefinition::clear_message_type() {
  message_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SwiftMtMessageDefinition::message_type() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.SwiftMtMessageDefinition.message_type)
  return _internal_message_type();
}
inline void SwiftMtMessageDefinition::set_message_type(const std::string& value) {
  _internal_set_message_type(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.SwiftMtMessageDefinition.message_type)
}
inline std::string* SwiftMtMessageDefinition::mutable_message_type() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.SwiftMtMessageDefinition.message_type)
  return _internal_mutable_message_type();
}
inline const std::string& SwiftMtMessageDefinition::_internal_message_type() const {
  return message_type_.GetNoArena();
}
inline void SwiftMtMessageDefinition::_internal_set_message_type(const std::string& value) {
  
  message_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SwiftMtMessageDefinition::set_message_type(std::string&& value) {
  
  message_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.SwiftMtMessageDefinition.message_type)
}
inline void SwiftMtMessageDefinition::set_message_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.SwiftMtMessageDefinition.message_type)
}
inline void SwiftMtMessageDefinition::set_message_type(const char* value, size_t size) {
  
  message_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.SwiftMtMessageDefinition.message_type)
}
inline std::string* SwiftMtMessageDefinition::_internal_mutable_message_type() {
  
  return message_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SwiftMtMessageDefinition::release_message_type() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.SwiftMtMessageDefinition.message_type)
  
  return message_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SwiftMtMessageDefinition::set_allocated_message_type(std::string* message_type) {
  if (message_type != nullptr) {
    
  } else {
    
  }
  message_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message_type);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.SwiftMtMessageDefinition.message_type)
}

// repeated .message.definition.swift.mt.ObjectDef objects = 3;
inline int SwiftMtMessageDefinition::_internal_objects_size() const {
  return objects_.size();
}
inline int SwiftMtMessageDefinition::objects_size() const {
  return _internal_objects_size();
}
inline void SwiftMtMessageDefinition::clear_objects() {
  objects_.Clear();
}
inline ::message::definition::swift::mt::ObjectDef* SwiftMtMessageDefinition::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.SwiftMtMessageDefinition.objects)
  return objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >*
SwiftMtMessageDefinition::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:message.definition.swift.mt.SwiftMtMessageDefinition.objects)
  return &objects_;
}
inline const ::message::definition::swift::mt::ObjectDef& SwiftMtMessageDefinition::_internal_objects(int index) const {
  return objects_.Get(index);
}
inline const ::message::definition::swift::mt::ObjectDef& SwiftMtMessageDefinition::objects(int index) const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.SwiftMtMessageDefinition.objects)
  return _internal_objects(index);
}
inline ::message::definition::swift::mt::ObjectDef* SwiftMtMessageDefinition::_internal_add_objects() {
  return objects_.Add();
}
inline ::message::definition::swift::mt::ObjectDef* SwiftMtMessageDefinition::add_objects() {
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.SwiftMtMessageDefinition.objects)
  return _internal_add_objects();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >&
SwiftMtMessageDefinition::objects() const {
  // @@protoc_insertion_point(field_list:message.definition.swift.mt.SwiftMtMessageDefinition.objects)
  return objects_;
}

// -------------------------------------------------------------------

// ObjectDef

// string tag = 1;
inline void ObjectDef::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ObjectDef::tag() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ObjectDef.tag)
  return _internal_tag();
}
inline void ObjectDef::set_tag(const std::string& value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.ObjectDef.tag)
}
inline std::string* ObjectDef::mutable_tag() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ObjectDef.tag)
  return _internal_mutable_tag();
}
inline const std::string& ObjectDef::_internal_tag() const {
  return tag_.GetNoArena();
}
inline void ObjectDef::_internal_set_tag(const std::string& value) {
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ObjectDef::set_tag(std::string&& value) {
  
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.ObjectDef.tag)
}
inline void ObjectDef::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.ObjectDef.tag)
}
inline void ObjectDef::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.ObjectDef.tag)
}
inline std::string* ObjectDef::_internal_mutable_tag() {
  
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ObjectDef::release_tag() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ObjectDef.tag)
  
  return tag_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectDef::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.ObjectDef.tag)
}

// .message.definition.swift.mt.SequenceDef sequence = 5;
inline bool ObjectDef::_internal_has_sequence() const {
  return object_oneof_case() == kSequence;
}
inline bool ObjectDef::has_sequence() const {
  return _internal_has_sequence();
}
inline void ObjectDef::set_has_sequence() {
  _oneof_case_[0] = kSequence;
}
inline void ObjectDef::clear_sequence() {
  if (_internal_has_sequence()) {
    delete object_oneof_.sequence_;
    clear_has_object_oneof();
  }
}
inline ::message::definition::swift::mt::SequenceDef* ObjectDef::release_sequence() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ObjectDef.sequence)
  if (has_sequence()) {
    clear_has_object_oneof();
      ::message::definition::swift::mt::SequenceDef* temp = object_oneof_.sequence_;
    object_oneof_.sequence_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::message::definition::swift::mt::SequenceDef& ObjectDef::_internal_sequence() const {
  return _internal_has_sequence()
      ? *object_oneof_.sequence_
      : *reinterpret_cast< ::message::definition::swift::mt::SequenceDef*>(&::message::definition::swift::mt::_SequenceDef_default_instance_);
}
inline const ::message::definition::swift::mt::SequenceDef& ObjectDef::sequence() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ObjectDef.sequence)
  return _internal_sequence();
}
inline ::message::definition::swift::mt::SequenceDef* ObjectDef::_internal_mutable_sequence() {
  if (!_internal_has_sequence()) {
    clear_object_oneof();
    set_has_sequence();
    object_oneof_.sequence_ = CreateMaybeMessage< ::message::definition::swift::mt::SequenceDef >(
        GetArenaNoVirtual());
  }
  return object_oneof_.sequence_;
}
inline ::message::definition::swift::mt::SequenceDef* ObjectDef::mutable_sequence() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ObjectDef.sequence)
  return _internal_mutable_sequence();
}

// .message.definition.swift.mt.FieldDef field = 6;
inline bool ObjectDef::_internal_has_field() const {
  return object_oneof_case() == kField;
}
inline bool ObjectDef::has_field() const {
  return _internal_has_field();
}
inline void ObjectDef::set_has_field() {
  _oneof_case_[0] = kField;
}
inline void ObjectDef::clear_field() {
  if (_internal_has_field()) {
    delete object_oneof_.field_;
    clear_has_object_oneof();
  }
}
inline ::message::definition::swift::mt::FieldDef* ObjectDef::release_field() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ObjectDef.field)
  if (has_field()) {
    clear_has_object_oneof();
      ::message::definition::swift::mt::FieldDef* temp = object_oneof_.field_;
    object_oneof_.field_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::message::definition::swift::mt::FieldDef& ObjectDef::_internal_field() const {
  return _internal_has_field()
      ? *object_oneof_.field_
      : *reinterpret_cast< ::message::definition::swift::mt::FieldDef*>(&::message::definition::swift::mt::_FieldDef_default_instance_);
}
inline const ::message::definition::swift::mt::FieldDef& ObjectDef::field() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ObjectDef.field)
  return _internal_field();
}
inline ::message::definition::swift::mt::FieldDef* ObjectDef::_internal_mutable_field() {
  if (!_internal_has_field()) {
    clear_object_oneof();
    set_has_field();
    object_oneof_.field_ = CreateMaybeMessage< ::message::definition::swift::mt::FieldDef >(
        GetArenaNoVirtual());
  }
  return object_oneof_.field_;
}
inline ::message::definition::swift::mt::FieldDef* ObjectDef::mutable_field() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ObjectDef.field)
  return _internal_mutable_field();
}

// .message.definition.swift.mt.RepetitionDef repetition = 7;
inline bool ObjectDef::_internal_has_repetition() const {
  return object_oneof_case() == kRepetition;
}
inline bool ObjectDef::has_repetition() const {
  return _internal_has_repetition();
}
inline void ObjectDef::set_has_repetition() {
  _oneof_case_[0] = kRepetition;
}
inline void ObjectDef::clear_repetition() {
  if (_internal_has_repetition()) {
    delete object_oneof_.repetition_;
    clear_has_object_oneof();
  }
}
inline ::message::definition::swift::mt::RepetitionDef* ObjectDef::release_repetition() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ObjectDef.repetition)
  if (has_repetition()) {
    clear_has_object_oneof();
      ::message::definition::swift::mt::RepetitionDef* temp = object_oneof_.repetition_;
    object_oneof_.repetition_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::message::definition::swift::mt::RepetitionDef& ObjectDef::_internal_repetition() const {
  return _internal_has_repetition()
      ? *object_oneof_.repetition_
      : *reinterpret_cast< ::message::definition::swift::mt::RepetitionDef*>(&::message::definition::swift::mt::_RepetitionDef_default_instance_);
}
inline const ::message::definition::swift::mt::RepetitionDef& ObjectDef::repetition() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ObjectDef.repetition)
  return _internal_repetition();
}
inline ::message::definition::swift::mt::RepetitionDef* ObjectDef::_internal_mutable_repetition() {
  if (!_internal_has_repetition()) {
    clear_object_oneof();
    set_has_repetition();
    object_oneof_.repetition_ = CreateMaybeMessage< ::message::definition::swift::mt::RepetitionDef >(
        GetArenaNoVirtual());
  }
  return object_oneof_.repetition_;
}
inline ::message::definition::swift::mt::RepetitionDef* ObjectDef::mutable_repetition() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ObjectDef.repetition)
  return _internal_mutable_repetition();
}

inline bool ObjectDef::has_object_oneof() const {
  return object_oneof_case() != OBJECT_ONEOF_NOT_SET;
}
inline void ObjectDef::clear_has_object_oneof() {
  _oneof_case_[0] = OBJECT_ONEOF_NOT_SET;
}
inline ObjectDef::ObjectOneofCase ObjectDef::object_oneof_case() const {
  return ObjectDef::ObjectOneofCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RepetitionDef

// repeated .message.definition.swift.mt.ObjectDef objects = 1;
inline int RepetitionDef::_internal_objects_size() const {
  return objects_.size();
}
inline int RepetitionDef::objects_size() const {
  return _internal_objects_size();
}
inline void RepetitionDef::clear_objects() {
  objects_.Clear();
}
inline ::message::definition::swift::mt::ObjectDef* RepetitionDef::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.RepetitionDef.objects)
  return objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >*
RepetitionDef::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:message.definition.swift.mt.RepetitionDef.objects)
  return &objects_;
}
inline const ::message::definition::swift::mt::ObjectDef& RepetitionDef::_internal_objects(int index) const {
  return objects_.Get(index);
}
inline const ::message::definition::swift::mt::ObjectDef& RepetitionDef::objects(int index) const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.RepetitionDef.objects)
  return _internal_objects(index);
}
inline ::message::definition::swift::mt::ObjectDef* RepetitionDef::_internal_add_objects() {
  return objects_.Add();
}
inline ::message::definition::swift::mt::ObjectDef* RepetitionDef::add_objects() {
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.RepetitionDef.objects)
  return _internal_add_objects();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >&
RepetitionDef::objects() const {
  // @@protoc_insertion_point(field_list:message.definition.swift.mt.RepetitionDef.objects)
  return objects_;
}

// -------------------------------------------------------------------

// SequenceDef

// string tag = 1;
inline void SequenceDef::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SequenceDef::tag() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.SequenceDef.tag)
  return _internal_tag();
}
inline void SequenceDef::set_tag(const std::string& value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.SequenceDef.tag)
}
inline std::string* SequenceDef::mutable_tag() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.SequenceDef.tag)
  return _internal_mutable_tag();
}
inline const std::string& SequenceDef::_internal_tag() const {
  return tag_.GetNoArena();
}
inline void SequenceDef::_internal_set_tag(const std::string& value) {
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SequenceDef::set_tag(std::string&& value) {
  
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.SequenceDef.tag)
}
inline void SequenceDef::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.SequenceDef.tag)
}
inline void SequenceDef::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.SequenceDef.tag)
}
inline std::string* SequenceDef::_internal_mutable_tag() {
  
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SequenceDef::release_tag() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.SequenceDef.tag)
  
  return tag_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SequenceDef::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.SequenceDef.tag)
}

// string name = 2;
inline void SequenceDef::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SequenceDef::name() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.SequenceDef.name)
  return _internal_name();
}
inline void SequenceDef::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.SequenceDef.name)
}
inline std::string* SequenceDef::mutable_name() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.SequenceDef.name)
  return _internal_mutable_name();
}
inline const std::string& SequenceDef::_internal_name() const {
  return name_.GetNoArena();
}
inline void SequenceDef::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SequenceDef::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.SequenceDef.name)
}
inline void SequenceDef::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.SequenceDef.name)
}
inline void SequenceDef::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.SequenceDef.name)
}
inline std::string* SequenceDef::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SequenceDef::release_name() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.SequenceDef.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SequenceDef::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.SequenceDef.name)
}

// bool repeatable = 3;
inline void SequenceDef::clear_repeatable() {
  repeatable_ = false;
}
inline bool SequenceDef::_internal_repeatable() const {
  return repeatable_;
}
inline bool SequenceDef::repeatable() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.SequenceDef.repeatable)
  return _internal_repeatable();
}
inline void SequenceDef::_internal_set_repeatable(bool value) {
  
  repeatable_ = value;
}
inline void SequenceDef::set_repeatable(bool value) {
  _internal_set_repeatable(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.SequenceDef.repeatable)
}

// bool mandatory = 4;
inline void SequenceDef::clear_mandatory() {
  mandatory_ = false;
}
inline bool SequenceDef::_internal_mandatory() const {
  return mandatory_;
}
inline bool SequenceDef::mandatory() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.SequenceDef.mandatory)
  return _internal_mandatory();
}
inline void SequenceDef::_internal_set_mandatory(bool value) {
  
  mandatory_ = value;
}
inline void SequenceDef::set_mandatory(bool value) {
  _internal_set_mandatory(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.SequenceDef.mandatory)
}

// repeated .message.definition.swift.mt.ObjectDef objects = 5;
inline int SequenceDef::_internal_objects_size() const {
  return objects_.size();
}
inline int SequenceDef::objects_size() const {
  return _internal_objects_size();
}
inline void SequenceDef::clear_objects() {
  objects_.Clear();
}
inline ::message::definition::swift::mt::ObjectDef* SequenceDef::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.SequenceDef.objects)
  return objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >*
SequenceDef::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:message.definition.swift.mt.SequenceDef.objects)
  return &objects_;
}
inline const ::message::definition::swift::mt::ObjectDef& SequenceDef::_internal_objects(int index) const {
  return objects_.Get(index);
}
inline const ::message::definition::swift::mt::ObjectDef& SequenceDef::objects(int index) const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.SequenceDef.objects)
  return _internal_objects(index);
}
inline ::message::definition::swift::mt::ObjectDef* SequenceDef::_internal_add_objects() {
  return objects_.Add();
}
inline ::message::definition::swift::mt::ObjectDef* SequenceDef::add_objects() {
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.SequenceDef.objects)
  return _internal_add_objects();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ObjectDef >&
SequenceDef::objects() const {
  // @@protoc_insertion_point(field_list:message.definition.swift.mt.SequenceDef.objects)
  return objects_;
}

// -------------------------------------------------------------------

// FieldDef

// string tag = 1;
inline void FieldDef::clear_tag() {
  tag_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& FieldDef::tag() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.FieldDef.tag)
  return _internal_tag();
}
inline void FieldDef::set_tag(const std::string& value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.FieldDef.tag)
}
inline std::string* FieldDef::mutable_tag() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.FieldDef.tag)
  return _internal_mutable_tag();
}
inline const std::string& FieldDef::_internal_tag() const {
  return tag_.GetNoArena();
}
inline void FieldDef::_internal_set_tag(const std::string& value) {
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void FieldDef::set_tag(std::string&& value) {
  
  tag_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.FieldDef.tag)
}
inline void FieldDef::set_tag(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.FieldDef.tag)
}
inline void FieldDef::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.FieldDef.tag)
}
inline std::string* FieldDef::_internal_mutable_tag() {
  
  return tag_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* FieldDef::release_tag() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.FieldDef.tag)
  
  return tag_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void FieldDef::set_allocated_tag(std::string* tag) {
  if (tag != nullptr) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.FieldDef.tag)
}

// repeated .message.definition.swift.mt.OptionDef options = 5;
inline int FieldDef::_internal_options_size() const {
  return options_.size();
}
inline int FieldDef::options_size() const {
  return _internal_options_size();
}
inline void FieldDef::clear_options() {
  options_.Clear();
}
inline ::message::definition::swift::mt::OptionDef* FieldDef::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.FieldDef.options)
  return options_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::OptionDef >*
FieldDef::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:message.definition.swift.mt.FieldDef.options)
  return &options_;
}
inline const ::message::definition::swift::mt::OptionDef& FieldDef::_internal_options(int index) const {
  return options_.Get(index);
}
inline const ::message::definition::swift::mt::OptionDef& FieldDef::options(int index) const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.FieldDef.options)
  return _internal_options(index);
}
inline ::message::definition::swift::mt::OptionDef* FieldDef::_internal_add_options() {
  return options_.Add();
}
inline ::message::definition::swift::mt::OptionDef* FieldDef::add_options() {
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.FieldDef.options)
  return _internal_add_options();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::OptionDef >&
FieldDef::options() const {
  // @@protoc_insertion_point(field_list:message.definition.swift.mt.FieldDef.options)
  return options_;
}

// repeated .message.definition.swift.mt.QualifierDef qualifiers = 10;
inline int FieldDef::_internal_qualifiers_size() const {
  return qualifiers_.size();
}
inline int FieldDef::qualifiers_size() const {
  return _internal_qualifiers_size();
}
inline void FieldDef::clear_qualifiers() {
  qualifiers_.Clear();
}
inline ::message::definition::swift::mt::QualifierDef* FieldDef::mutable_qualifiers(int index) {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.FieldDef.qualifiers)
  return qualifiers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::QualifierDef >*
FieldDef::mutable_qualifiers() {
  // @@protoc_insertion_point(field_mutable_list:message.definition.swift.mt.FieldDef.qualifiers)
  return &qualifiers_;
}
inline const ::message::definition::swift::mt::QualifierDef& FieldDef::_internal_qualifiers(int index) const {
  return qualifiers_.Get(index);
}
inline const ::message::definition::swift::mt::QualifierDef& FieldDef::qualifiers(int index) const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.FieldDef.qualifiers)
  return _internal_qualifiers(index);
}
inline ::message::definition::swift::mt::QualifierDef* FieldDef::_internal_add_qualifiers() {
  return qualifiers_.Add();
}
inline ::message::definition::swift::mt::QualifierDef* FieldDef::add_qualifiers() {
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.FieldDef.qualifiers)
  return _internal_add_qualifiers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::QualifierDef >&
FieldDef::qualifiers() const {
  // @@protoc_insertion_point(field_list:message.definition.swift.mt.FieldDef.qualifiers)
  return qualifiers_;
}

// -------------------------------------------------------------------

// OptionDef

// string option = 1;
inline void OptionDef::clear_option() {
  option_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OptionDef::option() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.OptionDef.option)
  return _internal_option();
}
inline void OptionDef::set_option(const std::string& value) {
  _internal_set_option(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.OptionDef.option)
}
inline std::string* OptionDef::mutable_option() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.OptionDef.option)
  return _internal_mutable_option();
}
inline const std::string& OptionDef::_internal_option() const {
  return option_.GetNoArena();
}
inline void OptionDef::_internal_set_option(const std::string& value) {
  
  option_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void OptionDef::set_option(std::string&& value) {
  
  option_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.OptionDef.option)
}
inline void OptionDef::set_option(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  option_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.OptionDef.option)
}
inline void OptionDef::set_option(const char* value, size_t size) {
  
  option_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.OptionDef.option)
}
inline std::string* OptionDef::_internal_mutable_option() {
  
  return option_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OptionDef::release_option() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.OptionDef.option)
  
  return option_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OptionDef::set_allocated_option(std::string* option) {
  if (option != nullptr) {
    
  } else {
    
  }
  option_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), option);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.OptionDef.option)
}

// string full_format = 2;
inline void OptionDef::clear_full_format() {
  full_format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& OptionDef::full_format() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.OptionDef.full_format)
  return _internal_full_format();
}
inline void OptionDef::set_full_format(const std::string& value) {
  _internal_set_full_format(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.OptionDef.full_format)
}
inline std::string* OptionDef::mutable_full_format() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.OptionDef.full_format)
  return _internal_mutable_full_format();
}
inline const std::string& OptionDef::_internal_full_format() const {
  return full_format_.GetNoArena();
}
inline void OptionDef::_internal_set_full_format(const std::string& value) {
  
  full_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void OptionDef::set_full_format(std::string&& value) {
  
  full_format_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.OptionDef.full_format)
}
inline void OptionDef::set_full_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  full_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.OptionDef.full_format)
}
inline void OptionDef::set_full_format(const char* value, size_t size) {
  
  full_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.OptionDef.full_format)
}
inline std::string* OptionDef::_internal_mutable_full_format() {
  
  return full_format_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* OptionDef::release_full_format() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.OptionDef.full_format)
  
  return full_format_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void OptionDef::set_allocated_full_format(std::string* full_format) {
  if (full_format != nullptr) {
    
  } else {
    
  }
  full_format_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), full_format);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.OptionDef.full_format)
}

// repeated .message.definition.swift.mt.ComponentName component_names = 3;
inline int OptionDef::_internal_component_names_size() const {
  return component_names_.size();
}
inline int OptionDef::component_names_size() const {
  return _internal_component_names_size();
}
inline void OptionDef::clear_component_names() {
  component_names_.Clear();
}
inline ::message::definition::swift::mt::ComponentName* OptionDef::mutable_component_names(int index) {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.OptionDef.component_names)
  return component_names_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentName >*
OptionDef::mutable_component_names() {
  // @@protoc_insertion_point(field_mutable_list:message.definition.swift.mt.OptionDef.component_names)
  return &component_names_;
}
inline const ::message::definition::swift::mt::ComponentName& OptionDef::_internal_component_names(int index) const {
  return component_names_.Get(index);
}
inline const ::message::definition::swift::mt::ComponentName& OptionDef::component_names(int index) const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.OptionDef.component_names)
  return _internal_component_names(index);
}
inline ::message::definition::swift::mt::ComponentName* OptionDef::_internal_add_component_names() {
  return component_names_.Add();
}
inline ::message::definition::swift::mt::ComponentName* OptionDef::add_component_names() {
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.OptionDef.component_names)
  return _internal_add_component_names();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentName >&
OptionDef::component_names() const {
  // @@protoc_insertion_point(field_list:message.definition.swift.mt.OptionDef.component_names)
  return component_names_;
}

// repeated .message.definition.swift.mt.ComponentFormatEntry component_formats = 4;
inline int OptionDef::_internal_component_formats_size() const {
  return component_formats_.size();
}
inline int OptionDef::component_formats_size() const {
  return _internal_component_formats_size();
}
inline void OptionDef::clear_component_formats() {
  component_formats_.Clear();
}
inline ::message::definition::swift::mt::ComponentFormatEntry* OptionDef::mutable_component_formats(int index) {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.OptionDef.component_formats)
  return component_formats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentFormatEntry >*
OptionDef::mutable_component_formats() {
  // @@protoc_insertion_point(field_mutable_list:message.definition.swift.mt.OptionDef.component_formats)
  return &component_formats_;
}
inline const ::message::definition::swift::mt::ComponentFormatEntry& OptionDef::_internal_component_formats(int index) const {
  return component_formats_.Get(index);
}
inline const ::message::definition::swift::mt::ComponentFormatEntry& OptionDef::component_formats(int index) const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.OptionDef.component_formats)
  return _internal_component_formats(index);
}
inline ::message::definition::swift::mt::ComponentFormatEntry* OptionDef::_internal_add_component_formats() {
  return component_formats_.Add();
}
inline ::message::definition::swift::mt::ComponentFormatEntry* OptionDef::add_component_formats() {
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.OptionDef.component_formats)
  return _internal_add_component_formats();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::message::definition::swift::mt::ComponentFormatEntry >&
OptionDef::component_formats() const {
  // @@protoc_insertion_point(field_list:message.definition.swift.mt.OptionDef.component_formats)
  return component_formats_;
}

// -------------------------------------------------------------------

// ComponentName

// string name = 1;
inline void ComponentName::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ComponentName::name() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ComponentName.name)
  return _internal_name();
}
inline void ComponentName::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.ComponentName.name)
}
inline std::string* ComponentName::mutable_name() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ComponentName.name)
  return _internal_mutable_name();
}
inline const std::string& ComponentName::_internal_name() const {
  return name_.GetNoArena();
}
inline void ComponentName::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ComponentName::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.ComponentName.name)
}
inline void ComponentName::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.ComponentName.name)
}
inline void ComponentName::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.ComponentName.name)
}
inline std::string* ComponentName::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ComponentName::release_name() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ComponentName.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentName::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.ComponentName.name)
}

// string separator_before = 2;
inline void ComponentName::clear_separator_before() {
  separator_before_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ComponentName::separator_before() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ComponentName.separator_before)
  return _internal_separator_before();
}
inline void ComponentName::set_separator_before(const std::string& value) {
  _internal_set_separator_before(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.ComponentName.separator_before)
}
inline std::string* ComponentName::mutable_separator_before() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ComponentName.separator_before)
  return _internal_mutable_separator_before();
}
inline const std::string& ComponentName::_internal_separator_before() const {
  return separator_before_.GetNoArena();
}
inline void ComponentName::_internal_set_separator_before(const std::string& value) {
  
  separator_before_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ComponentName::set_separator_before(std::string&& value) {
  
  separator_before_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.ComponentName.separator_before)
}
inline void ComponentName::set_separator_before(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  separator_before_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.ComponentName.separator_before)
}
inline void ComponentName::set_separator_before(const char* value, size_t size) {
  
  separator_before_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.ComponentName.separator_before)
}
inline std::string* ComponentName::_internal_mutable_separator_before() {
  
  return separator_before_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ComponentName::release_separator_before() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ComponentName.separator_before)
  
  return separator_before_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentName::set_allocated_separator_before(std::string* separator_before) {
  if (separator_before != nullptr) {
    
  } else {
    
  }
  separator_before_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), separator_before);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.ComponentName.separator_before)
}

// string separator_after = 3;
inline void ComponentName::clear_separator_after() {
  separator_after_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ComponentName::separator_after() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ComponentName.separator_after)
  return _internal_separator_after();
}
inline void ComponentName::set_separator_after(const std::string& value) {
  _internal_set_separator_after(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.ComponentName.separator_after)
}
inline std::string* ComponentName::mutable_separator_after() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ComponentName.separator_after)
  return _internal_mutable_separator_after();
}
inline const std::string& ComponentName::_internal_separator_after() const {
  return separator_after_.GetNoArena();
}
inline void ComponentName::_internal_set_separator_after(const std::string& value) {
  
  separator_after_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ComponentName::set_separator_after(std::string&& value) {
  
  separator_after_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.ComponentName.separator_after)
}
inline void ComponentName::set_separator_after(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  separator_after_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.ComponentName.separator_after)
}
inline void ComponentName::set_separator_after(const char* value, size_t size) {
  
  separator_after_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.ComponentName.separator_after)
}
inline std::string* ComponentName::_internal_mutable_separator_after() {
  
  return separator_after_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ComponentName::release_separator_after() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ComponentName.separator_after)
  
  return separator_after_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentName::set_allocated_separator_after(std::string* separator_after) {
  if (separator_after != nullptr) {
    
  } else {
    
  }
  separator_after_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), separator_after);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.ComponentName.separator_after)
}

// -------------------------------------------------------------------

// ComponentFormatEntry

// string format = 1;
inline void ComponentFormatEntry::clear_format() {
  format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ComponentFormatEntry::format() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ComponentFormatEntry.format)
  return _internal_format();
}
inline void ComponentFormatEntry::set_format(const std::string& value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.ComponentFormatEntry.format)
}
inline std::string* ComponentFormatEntry::mutable_format() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ComponentFormatEntry.format)
  return _internal_mutable_format();
}
inline const std::string& ComponentFormatEntry::_internal_format() const {
  return format_.GetNoArena();
}
inline void ComponentFormatEntry::_internal_set_format(const std::string& value) {
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ComponentFormatEntry::set_format(std::string&& value) {
  
  format_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.ComponentFormatEntry.format)
}
inline void ComponentFormatEntry::set_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.ComponentFormatEntry.format)
}
inline void ComponentFormatEntry::set_format(const char* value, size_t size) {
  
  format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.ComponentFormatEntry.format)
}
inline std::string* ComponentFormatEntry::_internal_mutable_format() {
  
  return format_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ComponentFormatEntry::release_format() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ComponentFormatEntry.format)
  
  return format_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentFormatEntry::set_allocated_format(std::string* format) {
  if (format != nullptr) {
    
  } else {
    
  }
  format_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.ComponentFormatEntry.format)
}

// string separator_before = 2;
inline void ComponentFormatEntry::clear_separator_before() {
  separator_before_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ComponentFormatEntry::separator_before() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ComponentFormatEntry.separator_before)
  return _internal_separator_before();
}
inline void ComponentFormatEntry::set_separator_before(const std::string& value) {
  _internal_set_separator_before(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.ComponentFormatEntry.separator_before)
}
inline std::string* ComponentFormatEntry::mutable_separator_before() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ComponentFormatEntry.separator_before)
  return _internal_mutable_separator_before();
}
inline const std::string& ComponentFormatEntry::_internal_separator_before() const {
  return separator_before_.GetNoArena();
}
inline void ComponentFormatEntry::_internal_set_separator_before(const std::string& value) {
  
  separator_before_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ComponentFormatEntry::set_separator_before(std::string&& value) {
  
  separator_before_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.ComponentFormatEntry.separator_before)
}
inline void ComponentFormatEntry::set_separator_before(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  separator_before_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.ComponentFormatEntry.separator_before)
}
inline void ComponentFormatEntry::set_separator_before(const char* value, size_t size) {
  
  separator_before_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.ComponentFormatEntry.separator_before)
}
inline std::string* ComponentFormatEntry::_internal_mutable_separator_before() {
  
  return separator_before_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ComponentFormatEntry::release_separator_before() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ComponentFormatEntry.separator_before)
  
  return separator_before_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentFormatEntry::set_allocated_separator_before(std::string* separator_before) {
  if (separator_before != nullptr) {
    
  } else {
    
  }
  separator_before_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), separator_before);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.ComponentFormatEntry.separator_before)
}

// string separator_after = 3;
inline void ComponentFormatEntry::clear_separator_after() {
  separator_after_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ComponentFormatEntry::separator_after() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.ComponentFormatEntry.separator_after)
  return _internal_separator_after();
}
inline void ComponentFormatEntry::set_separator_after(const std::string& value) {
  _internal_set_separator_after(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.ComponentFormatEntry.separator_after)
}
inline std::string* ComponentFormatEntry::mutable_separator_after() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.ComponentFormatEntry.separator_after)
  return _internal_mutable_separator_after();
}
inline const std::string& ComponentFormatEntry::_internal_separator_after() const {
  return separator_after_.GetNoArena();
}
inline void ComponentFormatEntry::_internal_set_separator_after(const std::string& value) {
  
  separator_after_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ComponentFormatEntry::set_separator_after(std::string&& value) {
  
  separator_after_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.ComponentFormatEntry.separator_after)
}
inline void ComponentFormatEntry::set_separator_after(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  separator_after_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.ComponentFormatEntry.separator_after)
}
inline void ComponentFormatEntry::set_separator_after(const char* value, size_t size) {
  
  separator_after_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.ComponentFormatEntry.separator_after)
}
inline std::string* ComponentFormatEntry::_internal_mutable_separator_after() {
  
  return separator_after_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ComponentFormatEntry::release_separator_after() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.ComponentFormatEntry.separator_after)
  
  return separator_after_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentFormatEntry::set_allocated_separator_after(std::string* separator_after) {
  if (separator_after != nullptr) {
    
  } else {
    
  }
  separator_after_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), separator_after);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.ComponentFormatEntry.separator_after)
}

// -------------------------------------------------------------------

// QualifierDef

// string qualifier = 1;
inline void QualifierDef::clear_qualifier() {
  qualifier_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& QualifierDef::qualifier() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.QualifierDef.qualifier)
  return _internal_qualifier();
}
inline void QualifierDef::set_qualifier(const std::string& value) {
  _internal_set_qualifier(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.QualifierDef.qualifier)
}
inline std::string* QualifierDef::mutable_qualifier() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.QualifierDef.qualifier)
  return _internal_mutable_qualifier();
}
inline const std::string& QualifierDef::_internal_qualifier() const {
  return qualifier_.GetNoArena();
}
inline void QualifierDef::_internal_set_qualifier(const std::string& value) {
  
  qualifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void QualifierDef::set_qualifier(std::string&& value) {
  
  qualifier_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.QualifierDef.qualifier)
}
inline void QualifierDef::set_qualifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qualifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.QualifierDef.qualifier)
}
inline void QualifierDef::set_qualifier(const char* value, size_t size) {
  
  qualifier_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.QualifierDef.qualifier)
}
inline std::string* QualifierDef::_internal_mutable_qualifier() {
  
  return qualifier_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* QualifierDef::release_qualifier() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.QualifierDef.qualifier)
  
  return qualifier_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void QualifierDef::set_allocated_qualifier(std::string* qualifier) {
  if (qualifier != nullptr) {
    
  } else {
    
  }
  qualifier_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qualifier);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.QualifierDef.qualifier)
}

// repeated string options = 2;
inline int QualifierDef::_internal_options_size() const {
  return options_.size();
}
inline int QualifierDef::options_size() const {
  return _internal_options_size();
}
inline void QualifierDef::clear_options() {
  options_.Clear();
}
inline std::string* QualifierDef::add_options() {
  // @@protoc_insertion_point(field_add_mutable:message.definition.swift.mt.QualifierDef.options)
  return _internal_add_options();
}
inline const std::string& QualifierDef::_internal_options(int index) const {
  return options_.Get(index);
}
inline const std::string& QualifierDef::options(int index) const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.QualifierDef.options)
  return _internal_options(index);
}
inline std::string* QualifierDef::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.QualifierDef.options)
  return options_.Mutable(index);
}
inline void QualifierDef::set_options(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.QualifierDef.options)
  options_.Mutable(index)->assign(value);
}
inline void QualifierDef::set_options(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.QualifierDef.options)
  options_.Mutable(index)->assign(std::move(value));
}
inline void QualifierDef::set_options(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  options_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.QualifierDef.options)
}
inline void QualifierDef::set_options(int index, const char* value, size_t size) {
  options_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.QualifierDef.options)
}
inline std::string* QualifierDef::_internal_add_options() {
  return options_.Add();
}
inline void QualifierDef::add_options(const std::string& value) {
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.QualifierDef.options)
}
inline void QualifierDef::add_options(std::string&& value) {
  options_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:message.definition.swift.mt.QualifierDef.options)
}
inline void QualifierDef::add_options(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:message.definition.swift.mt.QualifierDef.options)
}
inline void QualifierDef::add_options(const char* value, size_t size) {
  options_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:message.definition.swift.mt.QualifierDef.options)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
QualifierDef::options() const {
  // @@protoc_insertion_point(field_list:message.definition.swift.mt.QualifierDef.options)
  return options_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
QualifierDef::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:message.definition.swift.mt.QualifierDef.options)
  return &options_;
}

// string description = 3;
inline void QualifierDef::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& QualifierDef::description() const {
  // @@protoc_insertion_point(field_get:message.definition.swift.mt.QualifierDef.description)
  return _internal_description();
}
inline void QualifierDef::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:message.definition.swift.mt.QualifierDef.description)
}
inline std::string* QualifierDef::mutable_description() {
  // @@protoc_insertion_point(field_mutable:message.definition.swift.mt.QualifierDef.description)
  return _internal_mutable_description();
}
inline const std::string& QualifierDef::_internal_description() const {
  return description_.GetNoArena();
}
inline void QualifierDef::_internal_set_description(const std::string& value) {
  
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void QualifierDef::set_description(std::string&& value) {
  
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:message.definition.swift.mt.QualifierDef.description)
}
inline void QualifierDef::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:message.definition.swift.mt.QualifierDef.description)
}
inline void QualifierDef::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:message.definition.swift.mt.QualifierDef.description)
}
inline std::string* QualifierDef::_internal_mutable_description() {
  
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* QualifierDef::release_description() {
  // @@protoc_insertion_point(field_release:message.definition.swift.mt.QualifierDef.description)
  
  return description_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void QualifierDef::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:message.definition.swift.mt.QualifierDef.description)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mt
}  // namespace swift
}  // namespace definition
}  // namespace message

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_SwiftMtMsgDefinition_2eproto
